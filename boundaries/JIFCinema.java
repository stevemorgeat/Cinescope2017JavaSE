/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package boundaries;

import daos.ArrondissementDAO;
import daos.Globale;
import daos.VilleDAO;
import entities.Arrondissement;
import entities.Ville;
import java.sql.*;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrateur
 */
public class JIFCinema extends javax.swing.JInternalFrame {

    private Connection icnx;
    private DefaultComboBoxModel idcbm;

    /**
     * Creates new form JIFCinema
     */
    public JIFCinema() {
        initComponents();
        setVisible(true);
        setTitle("Nouveau Cinéma");

        icnx = Globale.getCnx();

        // Affichage des villes dans la liste déroulante jComboBoxVille
        try {
            // Création du statement
            Statement lstSQL = icnx.createStatement();
            // Récupération du résultat de la requete SQL exécutée
            ResultSet lrs = lstSQL.executeQuery("SELECT NOM_ville FROM ville ORDER BY 1");
            // Déclaration de la liste déroulante
            idcbm = new DefaultComboBoxModel();
            // Boucle dans le curseur
            while (lrs.next()) {
                // Ajout du résultat trouvé dans la liste déroulante
                idcbm.addElement(lrs.getString(1));
            }
            // Affichage du résultat de la liste déroulante
            jComboBoxVille.setModel(idcbm);
        } catch (SQLException ex) {
            jLabelMessage.setText(ex.getMessage());
        }

        // Affichage des arrondissements dans la liste déroulante jComboBoxArrondissement
        try {
            // Création du statement
            Statement lstSQL = icnx.createStatement();
            // Récupération du résultat de la requete SQL exécutée
            ResultSet lrs = lstSQL.executeQuery("SELECT NOM_arrondissement FROM arrondissement ORDER BY 1");
            // Déclaration de la liste déroulante
            idcbm = new DefaultComboBoxModel();
            // Boucle dans le curseur
            while (lrs.next()) {
                // Ajout du résultat trouvé dans la liste déroulante
                idcbm.addElement(lrs.getString(1));
            }
            // Affichage du résultat de la liste déroulante
            jComboBoxArrondissement.setModel(idcbm);
        } catch (SQLException ex) {
            jLabelMessage.setText(ex.getMessage());
        }

        if(jComboBoxVille.getSelectedItem().toString().equals("Paris")){
            
        }else{
        // Sinon la jComboBoxArrondissement n'est pas selectionnable
        
        jComboBoxArrondissement.setSelectedItem("pas d'arrondissement");
        jComboBoxArrondissement.setEnabled(false);
        }
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldCode = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldNom = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldAdresse = new javax.swing.JTextField();
        jCheckBoxAcces = new javax.swing.JCheckBox();
        jComboBoxVille = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxArrondissement = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableSalle = new javax.swing.JTable();
        jButtonNewSalle = new javax.swing.JButton();
        jButtonValider = new javax.swing.JButton();
        jLabelMessage = new javax.swing.JLabel();
        jLabelMessageCode = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Nouveau Cinéma");

        jLabel1.setText("Nouveau cinéma ...");

        jLabel2.setText("Code cinéma");

        jLabel3.setText("Nom");

        jLabel4.setText("Adresse");

        jCheckBoxAcces.setText("Accès aux personnes handicapées");
        jCheckBoxAcces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAccesActionPerformed(evt);
            }
        });

        jComboBoxVille.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxVille.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxVilleItemStateChanged(evt);
            }
        });
        jComboBoxVille.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxVilleActionPerformed(evt);
            }
        });

        jLabel5.setText("Ville");

        jComboBoxArrondissement.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxArrondissement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxArrondissementActionPerformed(evt);
            }
        });

        jLabel6.setText("Arrondissement");

        jTableSalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Cinéma", "Nom Salle", "Description Salle"
            }
        ));
        jScrollPane2.setViewportView(jTableSalle);

        jButtonNewSalle.setText("Nouvelle salle");
        jButtonNewSalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewSalleActionPerformed(evt);
            }
        });

        jButtonValider.setText("Valider nouveau cinéma ...");
        jButtonValider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValiderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabelMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldCode, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelMessageCode))
                            .addComponent(jTextFieldNom, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldAdresse, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBoxAcces)
                            .addComponent(jComboBoxVille, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxArrondissement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButtonNewSalle, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonValider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMessageCode))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldAdresse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxAcces)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxVille, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxArrondissement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonNewSalle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonValider)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxArrondissementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxArrondissementActionPerformed
        //
    }//GEN-LAST:event_jComboBoxArrondissementActionPerformed

    private void jComboBoxVilleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxVilleActionPerformed
        // Déblocage de l'accès à la jComboBoxArrondissement que si la ville de Paris est selectionnée
        // Récupération de la valeur sélectionné dans la jComboBoxVille
        String vSelection = jComboBoxVille.getSelectedItem().toString();
        // Test si la valeur est égale à Paris
        if (vSelection.equals("Paris")) {
            // Si c'est égal l'accès à la jComboBoxArrondissement est possible
            jComboBoxArrondissement.setEnabled(true);
        } else {
            jComboBoxArrondissement.setEnabled(false);
        }
    }//GEN-LAST:event_jComboBoxVilleActionPerformed

    private void jButtonNewSalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewSalleActionPerformed
        // Ajout d'une ligne vide éditable dans jTable
        Object[] tLigne;
        DefaultTableModel ldtm = (DefaultTableModel) jTableSalle.getModel();
        tLigne = new Object[1];
        ldtm.addRow(tLigne);
    }//GEN-LAST:event_jButtonNewSalleActionPerformed

    private void jButtonValiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValiderActionPerformed
        // Ajout d'un cinéma
        boolean lbOK = true;
        String erreurCode = "[0-9]{2}";
        // Test si le code comporte bien deux chiffres
        if (!jTextFieldCode.getText().matches(erreurCode)) {
            jLabelMessageCode.setText("Le code doit être composé de 2 chiffres.");
            lbOK = false;
        }
        // Test si les champs sont vides
        if (jTextFieldCode.getText().isEmpty() || jTextFieldNom.getText().isEmpty() || jTextFieldAdresse.getText().isEmpty()) {
            jLabelMessage.setText("Tous les champs sont obligatoires !");
            lbOK = false;
        }
        if (lbOK) {
            try {
                // Test si la checkbox est cochée
                boolean check = jCheckBoxAcces.isSelected();
                int acces;
                if (check) {
                    System.out.println(check);
                    acces = 1;
                } else {
                    System.out.println(check);
                    acces = 0;
                }
                // Recupération de l'ID de la ville selectionnée
                String ville = jComboBoxVille.getSelectedItem().toString();
                VilleDAO dao = new VilleDAO(icnx);
                Ville resultatVille = dao.selectOne(ville);
                // Recupération de l'ID de l'arrondissement selectionné
                String arrondissement = jComboBoxArrondissement.getSelectedItem().toString();
                ArrondissementDAO daoA = new ArrondissementDAO(icnx);
                Arrondissement resultatArrondissement = daoA.selectOne(arrondissement);
                int idArrondissement =(int) resultatArrondissement.getIdArrondissement();
                
                 
                // Récupération du résultat de la requete SQL exécutée
                String lsSQL = "INSERT INTO cinema(ID_ville, ID_arrondissement, CODE_cinema, NOM_cinema, ADRESSE_cinema, ACCES_HANDICAPES) VALUES(?,?,?,?,?,?)";
                // Préparation du statement
                PreparedStatement lpst = icnx.prepareStatement(lsSQL);
                // Récupération des valeurs entrées dans les différents champs
                lpst.setInt(1, (int) resultatVille.getIdVille());
                lpst.setInt(2,idArrondissement );
                lpst.setString(3, jTextFieldCode.getText());
                lpst.setString(4, jTextFieldNom.getText());
                lpst.setString(5, jTextFieldAdresse.getText());
                lpst.setInt(6, acces);
                // Execution de l'ordre SQL
                lpst.executeUpdate();
                // Commit
                icnx.commit();
                // Fermeture du Statement
                lpst.close();
                jLabelMessage.setText("Cinéma ajouté !");
            } catch (SQLException ex) {
                jLabelMessage.setText(ex.getMessage());
            }
        } 
    }//GEN-LAST:event_jButtonValiderActionPerformed

    private void jCheckBoxAccesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAccesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxAccesActionPerformed

    private void jComboBoxVilleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxVilleItemStateChanged
        //
    }//GEN-LAST:event_jComboBoxVilleItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonNewSalle;
    private javax.swing.JButton jButtonValider;
    private javax.swing.JCheckBox jCheckBoxAcces;
    private javax.swing.JComboBox jComboBoxArrondissement;
    private javax.swing.JComboBox jComboBoxVille;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelMessage;
    private javax.swing.JLabel jLabelMessageCode;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableSalle;
    private javax.swing.JTextField jTextFieldAdresse;
    private javax.swing.JTextField jTextFieldCode;
    private javax.swing.JTextField jTextFieldNom;
    // End of variables declaration//GEN-END:variables
}
