/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package boundaries;

import daos.Globale;
import java.beans.PropertyVetoException;
import java.sql.Connection;
import javax.swing.JDesktopPane;
import javax.swing.JInternalFrame;

/**
 *
 * @author allth
 */
public class MDI extends javax.swing.JFrame {

    private Connection icnx;
    /**
     * Creates new form MDI
     */
    public MDI() {
        initComponents();

        // pour donner un titre à la fenêtre
        setTitle("MDI - Cinéscope 2017");
        //pour dimensionner la fenetre
        setSize(900, 900);
        // pour mettre la fenêtre au centre
        setLocationRelativeTo(null);
        // pour rendre la fenêtre visible
        setVisible(true);
        // on crée une connection et on laffecte a la Class globale
        icnx = connexion.Connexion.getConnexionMySQL("127.0.0.1", "cinescope2017", "3306", "root", "");
        Globale.setCnx(icnx);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator6 = new javax.swing.JSeparator();
        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();
        jMenuFenetre = new javax.swing.JMenu();
        jMenuFenetreItemMosaiqueHorizontale = new javax.swing.JMenuItem();
        jMenuFenetreItemMosaiqueVerticale = new javax.swing.JMenuItem();
        jMenuFenetreItemMosaiqueCascade = new javax.swing.JMenuItem();
        jMenuFenetreItemFermerTout = new javax.swing.JMenuItem();
        jMenuFenetreItemFermerPage = new javax.swing.JMenuItem();
        jMenuCRUD = new javax.swing.JMenu();
        jMenuCrudItemPaysAjout = new javax.swing.JMenuItem();
        jMenuCrudItemPaysDelete = new javax.swing.JMenuItem();
        jMenuCrudItemPaysVisualisation = new javax.swing.JMenuItem();
        jMenuCrudItemPaysUpdate = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuCrudItemArrondissementsCrud = new javax.swing.JMenuItem();
        jMenuCrudItemDepartementCrud = new javax.swing.JMenuItem();
        jMenuCrudItemVillesCrud = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuCrudItemGenreCrud = new javax.swing.JMenuItem();
        jMenuCrudItemRubriqueCrud = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuCrudItemMediaCrud = new javax.swing.JMenuItem();
        jMenuCrudItemAppreciationCrud = new javax.swing.JMenuItem();
        jMenuCrudItemJournalistesCrud = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuCrudItemCinemaAjout = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenuCrudItemGeneriqueCrud = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        jMenuCrudItemMetroVisu = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        jMenuCrudItemArtisteCrud = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentMenuItem.setMnemonic('c');
        contentMenuItem.setText("Contents");
        helpMenu.add(contentMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        jMenuFenetre.setText("Fenêtre");

        jMenuFenetreItemMosaiqueHorizontale.setText("Horizontale");
        jMenuFenetreItemMosaiqueHorizontale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFenetreItemMosaiqueHorizontaleActionPerformed(evt);
            }
        });
        jMenuFenetre.add(jMenuFenetreItemMosaiqueHorizontale);

        jMenuFenetreItemMosaiqueVerticale.setText("Verticale");
        jMenuFenetreItemMosaiqueVerticale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFenetreItemMosaiqueVerticaleActionPerformed(evt);
            }
        });
        jMenuFenetre.add(jMenuFenetreItemMosaiqueVerticale);

        jMenuFenetreItemMosaiqueCascade.setText("Cascade");
        jMenuFenetreItemMosaiqueCascade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFenetreItemMosaiqueCascadeActionPerformed(evt);
            }
        });
        jMenuFenetre.add(jMenuFenetreItemMosaiqueCascade);

        jMenuFenetreItemFermerTout.setText("Fermer Tout");
        jMenuFenetreItemFermerTout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFenetreItemFermerToutActionPerformed(evt);
            }
        });
        jMenuFenetre.add(jMenuFenetreItemFermerTout);

        jMenuFenetreItemFermerPage.setText("Fermer Page");
        jMenuFenetreItemFermerPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFenetreItemFermerPageActionPerformed(evt);
            }
        });
        jMenuFenetre.add(jMenuFenetreItemFermerPage);

        menuBar.add(jMenuFenetre);

        jMenuCRUD.setText("CRUD");

        jMenuCrudItemPaysAjout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuCrudItemPaysAjout.setText("Pays (Ajout)");
        jMenuCrudItemPaysAjout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudItemPaysAjoutActionPerformed(evt);
            }
        });
        jMenuCRUD.add(jMenuCrudItemPaysAjout);

        jMenuCrudItemPaysDelete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuCrudItemPaysDelete.setText("Pays (Suppression)");
        jMenuCrudItemPaysDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudItemPaysDeleteActionPerformed(evt);
            }
        });
        jMenuCRUD.add(jMenuCrudItemPaysDelete);

        jMenuCrudItemPaysVisualisation.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuCrudItemPaysVisualisation.setText("Pays (Visualisation)");
        jMenuCrudItemPaysVisualisation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudItemPaysVisualisationActionPerformed(evt);
            }
        });
        jMenuCRUD.add(jMenuCrudItemPaysVisualisation);

        jMenuCrudItemPaysUpdate.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuCrudItemPaysUpdate.setText("Pays (Modification)");
        jMenuCrudItemPaysUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudItemPaysUpdateActionPerformed(evt);
            }
        });
        jMenuCRUD.add(jMenuCrudItemPaysUpdate);
        jMenuCRUD.add(jSeparator1);

        jMenuCrudItemArrondissementsCrud.setText("Arrondissements CRUD");
        jMenuCrudItemArrondissementsCrud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudItemArrondissementsCrudActionPerformed(evt);
            }
        });
        jMenuCRUD.add(jMenuCrudItemArrondissementsCrud);

        jMenuCrudItemDepartementCrud.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuCrudItemDepartementCrud.setText("Départements CRUD");
        jMenuCrudItemDepartementCrud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudItemDepartementCrudActionPerformed(evt);
            }
        });
        jMenuCRUD.add(jMenuCrudItemDepartementCrud);

        jMenuCrudItemVillesCrud.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuCrudItemVillesCrud.setText("Villes CRUD");
        jMenuCRUD.add(jMenuCrudItemVillesCrud);
        jMenuCRUD.add(jSeparator2);

        jMenuCrudItemGenreCrud.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuCrudItemGenreCrud.setText("Genres CRUD");
        jMenuCrudItemGenreCrud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudItemGenreCrudActionPerformed(evt);
            }
        });
        jMenuCRUD.add(jMenuCrudItemGenreCrud);

        jMenuCrudItemRubriqueCrud.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuCrudItemRubriqueCrud.setText("Rubriques CRUD");
        jMenuCRUD.add(jMenuCrudItemRubriqueCrud);
        jMenuCRUD.add(jSeparator3);

        jMenuCrudItemMediaCrud.setText("Média CRUD");
        jMenuCrudItemMediaCrud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudItemMediaCrudActionPerformed(evt);
            }
        });
        jMenuCRUD.add(jMenuCrudItemMediaCrud);

        jMenuCrudItemAppreciationCrud.setText("Appréciation CRUD");
        jMenuCRUD.add(jMenuCrudItemAppreciationCrud);

        jMenuCrudItemJournalistesCrud.setText("Journalistes CRUD");
        jMenuCRUD.add(jMenuCrudItemJournalistesCrud);
        jMenuCRUD.add(jSeparator4);

        jMenuCrudItemCinemaAjout.setText("Cinémas (Ajout)");
        jMenuCrudItemCinemaAjout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudItemCinemaAjoutActionPerformed(evt);
            }
        });
        jMenuCRUD.add(jMenuCrudItemCinemaAjout);
        jMenuCRUD.add(jSeparator5);

        jMenuCrudItemGeneriqueCrud.setText("Générique CRUD");
        jMenuCrudItemGeneriqueCrud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudItemGeneriqueCrudActionPerformed(evt);
            }
        });
        jMenuCRUD.add(jMenuCrudItemGeneriqueCrud);
        jMenuCRUD.add(jSeparator7);

        jMenuCrudItemMetroVisu.setText("Visu Metro Paris");
        jMenuCrudItemMetroVisu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudItemMetroVisuActionPerformed(evt);
            }
        });
        jMenuCRUD.add(jMenuCrudItemMetroVisu);
        jMenuCRUD.add(jSeparator8);

        jMenuCrudItemArtisteCrud.setText("Artiste CRUD");
        jMenuCrudItemArtisteCrud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudItemArtisteCrudActionPerformed(evt);
            }
        });
        jMenuCRUD.add(jMenuCrudItemArtisteCrud);

        menuBar.add(jMenuCRUD);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void jMenuFenetreItemMosaiqueHorizontaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFenetreItemMosaiqueHorizontaleActionPerformed
        // TODO add your handling code here:

        // on récupère le bureau
        JDesktopPane jdpBureau = this.desktopPane;
        // on récupère dans un tableau les Internal frame ouverte
        JInternalFrame[] tFrames = jdpBureau.getAllFrames();

        try {
            int ly = 0;
            // on récupère la taille du bureau
            int liLargeurBureau = jdpBureau.getWidth();
            int liHauteurBureau = jdpBureau.getHeight();
            // on divise la hauteur du bureau par le nombre de fenetres ouvertes pour plus tard l'affecter au hauteur en mosaique
            int liHauteur = liHauteurBureau / tFrames.length;

            for (int i = tFrames.length - 1; i >= 0; i--) {
                // setBounds ( position sur l'horizontale , position sur verticale , largeur de la fenetre , hauteur de la fenetre)
                tFrames[i].setBounds(0, ly, liLargeurBureau, liHauteur);
                ly += liHauteur;
            }

        } catch (Exception e) {
        }

    }//GEN-LAST:event_jMenuFenetreItemMosaiqueHorizontaleActionPerformed

    private void jMenuFenetreItemMosaiqueCascadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFenetreItemMosaiqueCascadeActionPerformed
        // TODO add your handling code here:

        JDesktopPane jdpBureau = this.desktopPane;
        JInternalFrame[] tFrames = jdpBureau.getAllFrames();
        try {
            int lx = 0, ly = 0;
            double liPourcentageFenetre = 0.7;
            int liLargeurBureau = jdpBureau.getWidth();
            int liHauteurBureau = jdpBureau.getHeight();
            double liLargeurFenetre = liLargeurBureau * liPourcentageFenetre;
            double liHauteurFenetre = liHauteurBureau * liPourcentageFenetre;

            for (int i = tFrames.length - 1; i >= 0; i--) {
                // Arbitrairement a 500 sur 300
                tFrames[i].setBounds(lx, ly, (int) liLargeurFenetre, (int) liHauteurFenetre);
                lx += 30;
                ly += 30;
            }

        } catch (Exception e) {
        }

    }//GEN-LAST:event_jMenuFenetreItemMosaiqueCascadeActionPerformed

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_openMenuItemActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveMenuItemActionPerformed

    private void jMenuFenetreItemFermerToutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFenetreItemFermerToutActionPerformed
        // TODO add your handling code here:

        JDesktopPane jdpBureau = this.desktopPane;

        JInternalFrame[] tFrames = jdpBureau.getAllFrames();
        try {
            for (int i = 0; i < tFrames.length; ++i) {
                tFrames[i].setClosed(true);
            }
        } catch (PropertyVetoException e) {
        }

    }//GEN-LAST:event_jMenuFenetreItemFermerToutActionPerformed

    private void jMenuFenetreItemFermerPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFenetreItemFermerPageActionPerformed
        // TODO add your handling code here:

        JDesktopPane jdpBureau = this.desktopPane;
        JInternalFrame[] tFrames = jdpBureau.getAllFrames();
        try {
            if (tFrames.length > 0) {
                tFrames[0].setClosed(true);
            }
        } catch (PropertyVetoException e) {
        }

    }//GEN-LAST:event_jMenuFenetreItemFermerPageActionPerformed

    private void jMenuFenetreItemMosaiqueVerticaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFenetreItemMosaiqueVerticaleActionPerformed
        // TODO add your handling code here:

        JDesktopPane jdpBureau = this.desktopPane;

        JInternalFrame[] tFrames = jdpBureau.getAllFrames();
        try {
            int lx = 0;

            int liLargeurBureau = jdpBureau.getWidth();
            int liHauteurBureau = jdpBureau.getHeight();
            int liLargeur = liLargeurBureau / tFrames.length;

            for (int i = tFrames.length - 1; i >= 0; i--) {
                tFrames[i].setBounds(lx, 0, liLargeur, liHauteurBureau);
                lx += liLargeur;
            }

        } catch (Exception e) {
        }

    }//GEN-LAST:event_jMenuFenetreItemMosaiqueVerticaleActionPerformed

    private void jMenuCrudItemPaysAjoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudItemPaysAjoutActionPerformed
        // TODO add your handling code here:
        JIFPaysAjout jif = new JIFPaysAjout();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudItemPaysAjoutActionPerformed

    private void jMenuCrudItemPaysVisualisationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudItemPaysVisualisationActionPerformed
        // TODO add your handling code here:
        JIFPaysVisu jif = new JIFPaysVisu();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudItemPaysVisualisationActionPerformed

    private void jMenuCrudItemPaysDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudItemPaysDeleteActionPerformed
        // TODO add your handling code here:
        JIFPaysSuppression jif = new JIFPaysSuppression();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudItemPaysDeleteActionPerformed

    private void jMenuCrudItemPaysUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudItemPaysUpdateActionPerformed
        // TODO add your handling code here:
        JIFPaysModification jif = new JIFPaysModification();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudItemPaysUpdateActionPerformed

    private void jMenuCrudItemArrondissementsCrudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudItemArrondissementsCrudActionPerformed
        // TODO add your handling code here:
        JIFCrudArrondissement jif = new JIFCrudArrondissement();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudItemArrondissementsCrudActionPerformed

    private void jMenuCrudItemMetroVisuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudItemMetroVisuActionPerformed
        // TODO add your handling code here:
        JIFVisuMetro jif = new JIFVisuMetro();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudItemMetroVisuActionPerformed

    private void jMenuCrudItemGeneriqueCrudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudItemGeneriqueCrudActionPerformed
        // TODO add your handling code here:
        JIFVGenerateCrud jif = new JIFVGenerateCrud();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudItemGeneriqueCrudActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        connexion.Connexion.seDeconnecter(icnx);
    }//GEN-LAST:event_formWindowClosing

    private void jMenuCrudItemDepartementCrudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudItemDepartementCrudActionPerformed
        // TODO add your handling code here:
        JIFDepartementCRUD jif = new JIFDepartementCRUD();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudItemDepartementCrudActionPerformed

    private void jMenuCrudItemMediaCrudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudItemMediaCrudActionPerformed
        // TODO add your handling code here:
        JIFMediaCRUD jif = new JIFMediaCRUD();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudItemMediaCrudActionPerformed

    private void jMenuCrudItemGenreCrudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudItemGenreCrudActionPerformed
        // TODO add your handling code here:
        JIFCrudGenre jif = new JIFCrudGenre();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudItemGenreCrudActionPerformed

    private void jMenuCrudItemArtisteCrudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudItemArtisteCrudActionPerformed
        // TODO add your handling code here:
        JIFCrudArtiste jif = new JIFCrudArtiste();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudItemArtisteCrudActionPerformed

    private void jMenuCrudItemCinemaAjoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudItemCinemaAjoutActionPerformed
        // TODO add your handling code here:
        JIFCinema jif = new JIFCinema();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudItemCinemaAjoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MDI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem contentMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenu jMenuCRUD;
    private javax.swing.JMenuItem jMenuCrudItemAppreciationCrud;
    private javax.swing.JMenuItem jMenuCrudItemArrondissementsCrud;
    private javax.swing.JMenuItem jMenuCrudItemArtisteCrud;
    private javax.swing.JMenuItem jMenuCrudItemCinemaAjout;
    private javax.swing.JMenuItem jMenuCrudItemDepartementCrud;
    private javax.swing.JMenuItem jMenuCrudItemGeneriqueCrud;
    private javax.swing.JMenuItem jMenuCrudItemGenreCrud;
    private javax.swing.JMenuItem jMenuCrudItemJournalistesCrud;
    private javax.swing.JMenuItem jMenuCrudItemMediaCrud;
    private javax.swing.JMenuItem jMenuCrudItemMetroVisu;
    private javax.swing.JMenuItem jMenuCrudItemPaysAjout;
    private javax.swing.JMenuItem jMenuCrudItemPaysDelete;
    private javax.swing.JMenuItem jMenuCrudItemPaysUpdate;
    private javax.swing.JMenuItem jMenuCrudItemPaysVisualisation;
    private javax.swing.JMenuItem jMenuCrudItemRubriqueCrud;
    private javax.swing.JMenuItem jMenuCrudItemVillesCrud;
    private javax.swing.JMenu jMenuFenetre;
    private javax.swing.JMenuItem jMenuFenetreItemFermerPage;
    private javax.swing.JMenuItem jMenuFenetreItemFermerTout;
    private javax.swing.JMenuItem jMenuFenetreItemMosaiqueCascade;
    private javax.swing.JMenuItem jMenuFenetreItemMosaiqueHorizontale;
    private javax.swing.JMenuItem jMenuFenetreItemMosaiqueVerticale;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    // End of variables declaration//GEN-END:variables

}
